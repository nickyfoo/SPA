1 - Follows with statement and wild card
stmt s;
Select s such that Follows (s, _)
1,2,3,4,5,6,10,12,13,14,15,19,20
5000
2 - Follows with wild card and statement
stmt s;
Select s such that Follows (_, s)
2,3,4,6,9,10,11,13,14,15,18,20,21
5000
3 - Follows with wild card and wild card
stmt s;
Select s such that Follows (_, _)
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
5000
4 - Follows with statement number and statement number, negative case (different nesting levels)
stmt s;
Select s such that Follows (4,5)

5000
5 - Follows with statement number and statement number, negative case (different containers)
stmt s;
Select s such that Follows (7,8)

5000
6 - Follows with statement and statement number
stmt s;
Select s such that Follows (s,6)
5
5000
7 - Follows with statement number and statement
stmt s;
Select s such that Follows (4,s)
10
5000
8 - Follows with assign and statement number
assign a;
Select a such that Follows (a,6)
5
5000
9 - Follows with statement number and assign, negative case (following statement is not assign)
assign a;
Select a such that Follows (3,a)

5000
10 - Follows with assign and if
assign a; if ifs;
Select a such that Follows (a,ifs)
5,14
5000
11 - Follows with wildcard and print
print p;
Select p such that Follows (p,_)
10,20
5000
12 - Follows* with statement and wild card
stmt s;
Select s such that Follows*(s,_)
1,2,3,4,5,6,10,12,13,14,15,19,20
5000
13 - Follows* with wild card and statement
stmt s;
Select s such that Follows*(_,s)
2,3,4,6,9,10,11,13,14,15,18,20,21
5000
14 - Follows* with wild card and wild card
read r;
Select r such that Follows*(_,_)
12,13,22
5000
15 - Follows* with statement number and statement number, negative case (inverse order)
stmt s;
Select s such that Follows*(10, 4)

5000
16 - Follows* with statement number and statement
stmt s;
Select s such that Follows*(3, s)
4,10,11
5000
17 - Follows* with statement and statement number
stmt s;
Select s such that Follows*(s, 18)
12,13,14,15
5000
18 - Follows* with read and statement number
read r;
Select r such that Follows*(r, 18)
12,13
5000
19 - Follows* with assign and print
assign a; print p;
Select a such that Follows*(a, p)
1,2,3,14,19
5000
20 - Follows* with wildcard and call
call c;
Select c such that Follows*(_, c)
9,21
5000
21 - Parent with statement and wild card
stmt s;
Select s such that Parent (s, _)
4,6,15
5000
22 - Parent with wild card and statement
stmt s;
Select s such that Parent(_, s)
5,6,7,8,9,16,17
5000
23 - Parent with wild card and wild card
call call;
Select call such that Parent(_, _)
9,17,21
5000
24 - Parent with statement and statement number
stmt s;
Select s such that Parent (s,7)
6
5000
25 - Parent with statement number and statement
stmt s;
Select s such that Parent (15,s)
16,17
5000
26 - Parent with statement number and statement number, negative case (child of child stmt)
stmt s;
Select s such that Parent (4,7)

5000
27 - Parent with while and statement number
while w;
Select w such that Parent (w,6)
4
5000
28 - Parent with while and call
while w; call calls;
Select calls such that Parent (w, calls)
9
5000
29 - Parent with wildcard and call
call calls;
Select calls such that Parent (_, calls)
9, 17
5000
30 - Parent* with statement and wild card
stmt s;
Select s such that Parent*(s,_)
4,6,15
5000
31 - Parent* with wild card and statement
stmt s;
Select s such that Parent*(_,s)
5,6,7,8,9,16,17
5000
32 - Parent* with statement number and statement
stmt s;
Select s such that Parent*(4, s)
5,6,7,8,9
5000
33 - Parent* with statement and statement number
stmt s;
Select s such that Parent*(s,8)
4,6
5000
34 - Parent* with if and statement number
if ifs;
Select ifs such that Parent*(ifs, 17)
15
5000
35 - Uses with assignment and variable
assign a; variable v;
Select a such that Uses(a,v)
5,7,8,14
5000
36 - Uses with container and variable name
if ifs;
Select ifs such that Uses(ifs, "z")
15
5000
37 - Uses with statement and wildcard
stmt s;
Select s such that Uses(s, _)
4,5,6,7,8,9,10,11,14,15,16,17,18,20
5000
38 - Uses with statement and variable
stmt s; variable v;
Select v such that Uses(s,v)
a,b,c,v,x,y,z
5000
39 - Uses with statement number and variable
variable v;
Select v such that Uses(5,v)
a,c
5000
40 - Uses with call and variable name
call c;
Select c such that Uses(c, "v")
9,17
5000
41 - Uses with procedure and variable
procedure p; variable v;
Select p such that Uses(p, v)
Example,f,g
5000
42 - Uses with if and variable
if ifs; variable v;
Select ifs such that Uses(ifs, v)
6,15
5000
43 - Uses with procedure name and variable
variable v;
Select v such that Uses("f", v)
v,x,y,z
5000
44 - Modifies with statement and wildcard
stmt s;
Select s such that Modifies(s,_)
1,2,3,4,5,6,7,8,9,12,13,14,15,17,19,21,22
5000
45 - Modifies with assignment and variable name
assign a;
Select a such that Modifies(a,"c")
3,5
5000
46 - Modifies with call and variable
call c; variable v;
Select c such that Modifies(c, v)
9,17,21
5000
47 - Modifies with procedure and variable name
procedure p;
Select p such that Modifies(p, "t")
Example,f,g,h
5000
48 - Modifies with no common synonyms
assign a1, a2; variable v;
Select a1 such that Modifies(a1,v) pattern a2(_,_)
1,2,3,5,7,8,14,19
5000
49 - Selecting synonym not used in clauses
read r; assign a; variable v;
Select r such that Modifies(a,"c") pattern a(v,_)
12,13,22
5000
50 - Selecting synonym not used in clauses and is an empty set in clause
read r; assign a; variable v;
Select r such that Modifies(a,"c") pattern a("test",_)

5000
51 - Select with keywords as synonyms
assign Select; variable pattern;
Select Select such that Uses(Select,pattern) pattern Select(pattern,_)
5,7
5000
52 - Calls with synonym and synonym
procedure p1,p2;
Select <p1, p2> such that Calls(p1, p2)
Example f,f g,g h
5000
53 - Calls with argument and synonym
procedure p;
Select p such that Calls("f", p)
g
5000
54 - Calls with synonym and argument
procedure p;
Select p such that Calls(p, "h")
g
5000
55 - Calls with argument and argument
variable v;
Select v such that Calls("Example", "f")
a,b,c,x,y,z,v,t
5000
56 - Calls with wildcard and synonym
procedure p;
Select p such that Calls(_, p)
f,g,h
5000
57 - Calls with synonym and integer, negative case
procedure p;
Select p such that Calls(p, 2)

5000
58 - Calls with assign and procedure, negative case
assign a; procedure p;
Select p such that Calls(a, p)

5000
59 - Calls with procedure and stmt, negative case
stmt s; procedure p;
Select s such that Calls(p, s)

5000
60 - Calls* with synonym and synonym
procedure p1,p2;
Select <p1, p2> such that Calls*(p1, p2)
Example f,Example g, Example h,f g,f h,g h
5000
61 - Calls* with argument and synonym
procedure p;
Select p such that Calls*("f", p)
g,h
5000
62 - Calls* with synonym and argument
procedure p;
Select p such that Calls*(p, "h")
Example,f,g
5000
63 - Calls* with argument and argument
variable v;
Select v such that Calls*("Example", "h")
a,b,c,x,y,z,v,t
5000
64 - Calls* with wildcard and synonym
procedure p;
Select p such that Calls*(_, p)
f,g,h
5000
65 - Calls* with synonym and integer (invalid)
procedure p;
Select p such that Calls*(p, 2)

5000
66 - Calls* with assign and procedure (invalid)
assign a; procedure p;
Select p such that Calls*(a, p)

5000
67 - Calls* with procedure and stmt (invalid)
stmt s; procedure p;
Select s such that Calls*(p, s)

5000
68 - Next with synonym and synonym
stmt s; assign a;
Select <s, a> such that Next(s,a)
1 2,2 3,4 5,6 7,6 8,13 14
5000
69 - Next with synonym and integer
stmt s;
Select s such that Next(s,4)
3,9
5000
70 - Next with synonym and wildcard
print pn;
Select pn such that Next(pn,_)
10,16,20
5000
71 - Next with integer and synonym
stmt s;
Select s such that Next(4,s)
5,10
5000
72 - Next with integer and integer
read r;
Select r such that Next(15,17)
12,13,22
5000
73 - Next with integer and wildcard
stmt s;
Select s such that Next(18,_)

5000
74 - Next with wildcard and synonym
assign a;
Select a such that Next(_,a)
2,3,5,7,8,14
5000
75 - Next with wildcard and integer
print pn;
Select pn such that Next(_,17)
10,11,16,18,20
5000
76 - Next with wildcard and wildcard
call c;
Select c such that Next(_,_)
9,17,21
5000
77 - Next* with synonym and synonym
stmt s; call c;
Select <s,c> such that Next*(c,s)
4 9,5 9,6 9,7 9,8 9,9 9,10 9,11 9,18 17
5000
78 - Next* with synonym and integer
stmt s;
Select s such that Next*(s,4)
1,2,3,4,5,6,7,8,9
5000
79 - Next* with synonym and wildcard
print pn;
Select pn such that Next*(pn,_)
10,16,20
5000
80 - Next* with integer and synonym
stmt s;
Select s such that Next*(4,s)
4,5,6,7,8,9,10,11
5000
81 - Next* with integer and integer
read r;
Select r such that Next*(12,18)
12,13,22
5000
82 - Next* with integer and wildcard
stmt s;
Select s such that Next*(18,_)

5000
83 - Next* with wildcard and synonym
assign a;
Select a such that Next*(_,a)
2,3,5,7,8,14
5000
84 - Next* with wildcard and integer
print pn;
Select pn such that Next*(_,4)
10,11,16,18,20
5000
85 - Next* with wildcard and wildcard
call c;
Select c such that Next*(_,_)
9,17,21
5000
86 - Assign Pattern with variable and exact pattern
assign a; variable v;
Select a pattern a(v, "b-1")
7
5000
87 - Assign Pattern with variable name and wild card
assign a;
Select a pattern a("c", _)
3,5
5000
88 - Assign Pattern with variable and partial pattern
assign a; variable v;
Select a pattern a(v, _"2"_)
3,5,19
5000
89 - Follow(s,s) Assign pattern(_,_)
assign a; stmt s;
Select s such that Follows(a, s) pattern a(_,_)
2,3,4,6,15,20
5000
90 - Follow*(s_num, s) Assign pattern(_,partial)
assign a;
Select a pattern a(_, _"x"_) such that Follows*(13, a)
14
5000
91 - Parent(s,s) Assign pattern(_,_)
assign a; stmt s;
Select s such that Parent(s,a) pattern a(_,_)
4,6
5000
92 - Parent*(s_num, s) Assign pattern(_,partial)
assign a;
Select a pattern a(_, _"1"_) such that Parent*(4, a)
5,7,8
5000
93 - Uses(a, v) Assign pattern(v,_)
assign a; variable v;
Select a such that Uses(a, v) pattern a(v, _)
5,7
5000
94 - Modifies(a, 'c') Assign pattern(_,'64 / 2')
assign a;
Select a such that Modifies(a,"c") pattern a(_, "64 / 2")
3
5000
95 - If Pattern synonym and wildcard
if ifs;
Select ifs pattern ifs(_,_,_)
6,15
5000
96 - If Pattern synonym and synonym
if ifs; variable v;
Select <ifs, v> pattern ifs(v,_,_)
6 b,6 a,15 z
5000
97 - If Pattern synonym and argument
if ifs;
Select ifs pattern ifs("z",_,_)
15
5000
98 - If pattern synonym and integer (invalid)
if ifs;
Select ifs pattern ifs(15,_,_)

5000
99 - While Pattern synonym and wildcard
while w;
Select w pattern w(_,_)
4
5000
100 - While Pattern synonym and synonym
while w; variable v;
Select <w, v> pattern w(v,_)
4 c,4 a
5000
101 - While Pattern synonym and argument
while w;
Select w pattern w("c",_)
4
5000
102 - While pattern synonym and integer (invalid)
while w;
Select w pattern w(4,_)

5000
103 - With attrRef and attrRef name
variable v; read r;
Select <v, r> with v.varName = r.varName
x 12,y 13,t 22
5000
104 - With attrRef and attrRef integer
constant c; assign a;
Select a with a.stmt# = c.value
1,2,3,5
5000
105 - With attrRef and name
read r;
Select r with r.varName = "x"
12
5000
106 - With integer and attrRef
read r;
Select r.varName with r.stmt# = 12
x
5000
107 - With name and name
call c;
Select c.procName with 10 = 10
f,g,h
5000
108 - With name and name
if ifs;
Select ifs.stmt# with "hello" = "hello"
6,15
5000
109 - With prog_line and integer
prog_line n; read r;
Select n with n = r.stmt# and r.varName = "x"
12
5000
110 - Parent, Assign Pattern, With AttrRef Name
stmt s; assign a; variable v;
Select s such that Parent(s,a) pattern a(v,_"(a+c+1)"_) with v.varName = "c"
4
5000
111 - Follows*, If Pattern, With AttrRef AttrRef
stmt s; if ifs; variable v; print pn;
Select <pn,v> such that Follows*(s,ifs) pattern ifs(v,_,_) with v.varName = pn.varName
11 a, 16 z,18 z
5000
112 - ModifiesP, While Pattern, With Integer AttrRef and AttrRef AttrRef
stmt s; procedure p; while w; variable v; print pn;
Select <p,v> such that Modifies(p, v) pattern w(v,_) with w.stmt# = 4 and pn.varName = v.varName
Example a, Example c
5000
113 - UsesS, Assign Pattern, With Integer Integer (invalid)
stmt s; assign a; variable v;
Select v such that Uses(s,v) pattern a(v,_) with 4 = 5

5000
114 - Next* and Parent, If Pattern, With AttrRef AttrRef
call c; stmt s; read r; if ifs; constant co;
Select c.procName such that Next*(r, ifs) and Parent(ifs, c) pattern ifs(_,_,_) with c.stmt# = co.value
g
5000
115 - Calls and UsesP and ModifiesS, Assign Pattern and If Pattern, With Name Name
procedure p; assign a; if ifs; variable v;
Select <a.stmt#, ifs> such that Calls(_,p) and Uses(p, v) and Modifies(a, v) pattern ifs(v,_,_) with "hi" = "hi"
14 15
5000
116 - Multiple such that with one bad Follows (invalid)
stmt s1,s2,s3,s4,s5,s6;
Select s1 such that Follows*(s1,s2) and Parent(s2,s3) and Next*(s3,s4) and Parent*(s4,s5) and Follows(s5,s6) and Follows(2,1)

5000
117 - Multiple such that
stmt s; variable v; if ifs; while w; assign a;
Select v such that Parent(w, s) and Follows(s, ifs) and Uses(ifs, v) and Modifies(ifs, v) and Uses(a, v) and Modifies(a,v)
b
5000
118 - Multiple patterns
while w; assign a; if ifs; variable v1,v2;
Select <w, a, ifs,v1,v2> pattern a(v2,_) and ifs(v1,_,_) and w(v2,_)
4 1 6 a a,4 1 6 b a,4 1 15 z a,4 3 6 a c,4 3 6 b c,4 3 15 z c,4 5 15 z c,4 5 6 a c,4 5 6 b c
5000
119 - Multiple withs
assign a; constant co; call c; print pn; prog_line n;
Select <c, a> with a.stmt# = co.value and pn.varName = "c" and c.stmt# = n and n = 9
9 1,9 2,9 3,9 5